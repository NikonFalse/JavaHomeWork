Создание классов

public class Person {
    private String name;
    private Pet pet;

    public Person(String name, Pet pet) {
        this.name = name;
        this.pet = pet;
    }

    public String getName() {
        return name;
    }

    public Pet getPet() {
        return pet;
    }
}

public class Pet {
    private String name;

    public Pet(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }
}

public class Dog extends Pet {
    public Dog(String name) {
        super(name);
    }
}

Xml - конфигурация

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dog" class="com.example.Dog">
        <constructor-arg value="Buddy"/>
    </bean>

    <bean id="person" class="com.example.Person">
        <constructor-arg value="Alice"/>
        <constructor-arg ref="dog"/>
    </bean>

</beans>

Аннотация

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AppConfig {

    @Bean
    public Dog dog() {
        return new Dog("Buddy");
    }

    @Bean
    public Person person() {
        return new Person("Alice", dog());
    }
}

Java - код 1

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class XmlConfigExample {
    public static void main(String[] args) {
        ApplicationContext context = new ClassPathXmlApplicationContext("spring-config.xml");

        Person person = context.getBean("person", Person.class);
        System.out.println("Person's name: " + person.getName());
        System.out.println("Pet's name: " + person.getPet().getName());
    }
}

Java - код 2

import org.springframework.context.annotation.AnnotationConfigApplicationContext;

public class AnnotationConfigExample {
    public static void main(String[] args) {
        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);

        Person person = context.getBean("person", Person.class);
        System.out.println("Person's name: " + person.getName());
        System.out.println("Pet's name: " + person.getPet().getName());

        context.close();
    }
}
